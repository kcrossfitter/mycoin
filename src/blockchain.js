const CryptoJS = require('crypto-js')

class Block {
  constructor(index, hash, previousHash, timestamp, data) {
    this.index = index
    this.hash = hash
    this.previousHash = previousHash
    this.timestamp = timestamp
    this.data = data
  }
}

// hash is generated by 
// index(0) + timestamp(1431364872461) + data(This is the genesis!!)
const genesisBlock = new Block(
  0, 
  '3EC173CDB65E3FB81BC4C30F2A3863CE947A3BEB724ABDDAECE96EAF91A6E1C7', 
  null, 
  1531364872461,
  "This is the genesis!!"
)

let blockchain = [genesisBlock]

const getLastBlock = () => blockchain[blockchain.length - 1]

const getTimestamp = () => new Date().getTime() / 1000

const createHash = (index, previousHash, timestamp, data) => 
  CryptoJS.SHA256(index + previousHash + timestamp + data).toString()

const createNewBlock = data => {
  const previousBlock = getLastBlock()
  const newBlockIndex = previousBlock.index + 1
  const newTimestamp = getTimestamp()
  
  const newHash = createHash(
    newBlockIndex, 
    previousBlock.hash, 
    newTimestamp, 
    data
  )

  const newBlock = new Block(
    newBlockIndex,
    newHash,
    previousBlock.hash,
    newTimestamp,
    data
  )

  return newBlock
}